// -alpha_dither no -dither  -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0xe1c01303
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _Blue_Slider_Horizontal_Medium_Slider_Round_back[]; 
extern const unsigned char _Blue_Slider_Horizontal_Medium_Slider_Round_fill[]; 
extern const unsigned char _Red_Slider_Horizontal_Medium_Indicators_Slider_Round_nob[]; 
extern const unsigned char _atdi_logo1[]; 
extern const unsigned char _atdi_logo_2[]; 
extern const unsigned char _atdi_template480x272[]; 
extern const unsigned char _atomLyr01[]; 
extern const unsigned char _atomLyr02[]; 
extern const unsigned char _atomLyr03[]; 
extern const unsigned char _atomLyr04[]; 
extern const unsigned char _atomLyr05[]; 
extern const unsigned char _atomLyr06[]; 
extern const unsigned char _atomLyr07[]; 
extern const unsigned char _atomLyr08[]; 
extern const unsigned char _atomLyr09[]; 
extern const unsigned char _atomLyr10[]; 
extern const unsigned char _atomLyr11[]; 
extern const unsigned char _atomLyr12[]; 
extern const unsigned char _dark_buttons_round_edge_small[]; 
extern const unsigned char _dark_buttons_round_edge_small_pressed[]; 
extern const unsigned char _gear_50x50[]; 
extern const unsigned char _home_gray50x50[]; 
extern const unsigned char _offbtn_50x50[]; 
extern const unsigned char _ok_button_pressed[]; 
extern const unsigned char _ok_button_th[]; 
extern const unsigned char _onbtn_50x50[]; 
extern const unsigned char _peare_gul[]; 
extern const unsigned char _peare_hvid[]; 

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { _Blue_Slider_Horizontal_Medium_Slider_Round_back, 0, 352, 15, 7, 0, 338, 14, touchgfx::Bitmap::ARGB8888 },
    { _Blue_Slider_Horizontal_Medium_Slider_Round_fill, 0, 352, 15, 7, 1, 338, 12, touchgfx::Bitmap::ARGB8888 },
    { _Red_Slider_Horizontal_Medium_Indicators_Slider_Round_nob, 0, 48, 48, 8, 7, 32, 32, touchgfx::Bitmap::ARGB8888 },
    { _atdi_logo1, 0, 269, 54, 203, 9, 62, 31, touchgfx::Bitmap::ARGB8888 },
    { _atdi_logo_2, 0, 269, 54, 203, 9, 62, 31, touchgfx::Bitmap::ARGB8888 },
    { _atdi_template480x272, 0, 480, 272, 0, 0, 480, 272, touchgfx::Bitmap::RGB565 },
    { _atomLyr01, 0, 150, 150, 62, 116, 26, 17, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr02, 0, 150, 150, 63, 60, 22, 16, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr03, 0, 150, 150, 66, 56, 18, 22, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr04, 0, 150, 150, 64, 59, 20, 20, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr05, 0, 150, 150, 65, 58, 19, 19, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr06, 0, 150, 150, 64, 60, 20, 17, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr07, 0, 150, 150, 64, 56, 20, 20, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr08, 0, 150, 150, 68, 56, 14, 23, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr09, 0, 150, 150, 64, 58, 20, 20, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr10, 0, 150, 150, 64, 58, 20, 21, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr11, 0, 150, 150, 64, 58, 19, 21, touchgfx::Bitmap::ARGB8888 },
    { _atomLyr12, 0, 150, 150, 28, 79, 19, 20, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _gear_50x50, 0, 50, 50, 41, 23, 4, 18, touchgfx::Bitmap::ARGB8888 },
    { _home_gray50x50, 0, 50, 50, 12, 23, 26, 13, touchgfx::Bitmap::ARGB8888 },
    { _offbtn_50x50, 0, 50, 50, 7, 8, 35, 34, touchgfx::Bitmap::ARGB8888 },
    { _ok_button_pressed, 0, 100, 45, 15, 5, 70, 32, touchgfx::Bitmap::ARGB8888 },
    { _ok_button_th, 0, 100, 45, 15, 5, 70, 32, touchgfx::Bitmap::ARGB8888 },
    { _onbtn_50x50, 0, 50, 50, 8, 7, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _peare_gul, 0, 60, 60, 24, 41, 13, 2, touchgfx::Bitmap::ARGB8888 },
    { _peare_hvid, 0, 60, 60, 24, 41, 13, 2, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
  const touchgfx::Bitmap::BitmapData* getInstance()
  {
    return bitmap_database;
  }
  uint16_t getInstanceSize()
  {
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
  }
}

