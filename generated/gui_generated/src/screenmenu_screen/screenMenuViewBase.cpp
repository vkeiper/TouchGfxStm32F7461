/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screenmenu_screen/screenMenuViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

screenMenuViewBase::screenMenuViewBase()  :
    buttonCallback(this, &screenMenuViewBase::buttonCallbackHandler)
{
    atdi_template480x2722.setXY(0, 0);
    atdi_template480x2722.setBitmap(Bitmap(BITMAP_ATDI_TEMPLATE480X272_ID));

    btnZoneScreens.setPosition(12, 19, 170, 60);
    btnZoneScreens.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnZoneScreens.setLabelText(TypedText(T_SINGLEUSEID2));
    btnZoneScreens.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnZoneScreens.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnZoneScreens.setAction(buttonCallback);

    btnCanbus.setPosition(12, 98, 170, 60);
    btnCanbus.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnCanbus.setLabelText(TypedText(T_SINGLEUSEID3));
    btnCanbus.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnCanbus.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnCanbus.setAction(buttonCallback);

    btnModbus.setPosition(290, 19, 170, 60);
    btnModbus.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnModbus.setLabelText(TypedText(T_SINGLEUSEID4));
    btnModbus.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnModbus.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnModbus.setAction(buttonCallback);

    btnIndsController.setPosition(290, 98, 170, 60);
    btnIndsController.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    btnIndsController.setLabelText(TypedText(T_SINGLEUSEID5));
    btnIndsController.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnIndsController.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    btnIndsController.setAction(buttonCallback);

    buttonHome.setPosition(22, 205, 50, 50);
    buttonHome.setBitmaps(Bitmap(BITMAP_HOME_GRAY50X50_ID), Bitmap(BITMAP_HOME_GRAY50X50_ID));
    buttonHome.setAction(buttonCallback);

    buttonSettings.setPosition(410, 204, 50, 50);
    buttonSettings.setBitmaps(Bitmap(BITMAP_GEAR_50X50_ID), Bitmap(BITMAP_GEAR_50X50_ID));

    anAtdiLogo.setXY(106, 203);
    anAtdiLogo.setBitmaps(BITMAP_ATDI_LOGO1_ID, BITMAP_ATDI_LOGO_2_ID);
    anAtdiLogo.setUpdateTicksInterval(20);
    anAtdiLogo.startAnimation(false, true, true);

    add(atdi_template480x2722);
    add(btnZoneScreens);
    add(btnCanbus);
    add(btnModbus);
    add(btnIndsController);
    add(buttonHome);
    add(buttonSettings);
    add(anAtdiLogo);
}

void screenMenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnZoneScreens)
    {
        //actionLuanchZone
        //When btnZoneScreens clicked change screen to screenZone
        //Go to screenZone with slide screen transition towards East
        application().gotoscreenZoneScreenSlideTransitionEast();
    }
    else if (&src == &btnCanbus)
    {
        //actionLaunchCanbus
        //When btnCanbus clicked change screen to screenCanbus
        //Go to screenCanbus with slide screen transition towards East
        application().gotoscreenCanbusScreenSlideTransitionEast();
    }
    else if (&src == &btnModbus)
    {
        //actionModbus
        //When btnModbus clicked change screen to screenModbus
        //Go to screenModbus with slide screen transition towards East
        application().gotoscreenModbusScreenSlideTransitionEast();
    }
    else if (&src == &btnIndsController)
    {
        //actionIndustrialBtn
        //When btnIndsController clicked change screen to screenIndustrialController
        //Go to screenIndustrialController with no screen transition
        application().gotoscreenIndustrialControllerScreenNoTransition();
    }
    else if (&src == &buttonHome)
    {
        //actionHomeBtn
        //When buttonHome clicked change screen to Main
        //Go to Main with slide screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
    else if (&src == &buttonSettings)
    {

    }
}
