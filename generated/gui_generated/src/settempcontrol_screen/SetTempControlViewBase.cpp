/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settempcontrol_screen/SetTempControlViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

SetTempControlViewBase::SetTempControlViewBase()  :
    buttonCallback(this, &SetTempControlViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &SetTempControlViewBase::sliderValueChangedCallbackHandler),
    sliderValueConfirmedCallback(this, &SetTempControlViewBase::sliderValueConfirmedCallbackHandler)
{
    backGround2.setPosition(0, 0, 480, 272);
    backGround2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    atdi_template480x2721.setXY(0, 0);
    atdi_template480x2721.setBitmap(Bitmap(BITMAP_ATDI_TEMPLATE480X272_ID));

    buttonOK.setPosition(180, 207, 100, 45);
    buttonOK.setBitmaps(Bitmap(BITMAP_OK_BUTTON_TH_ID), Bitmap(BITMAP_OK_BUTTON_PRESSED_ID));
    buttonOK.setAction(buttonCallback);

    slider.setBitmaps(Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID), Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID), Bitmap(BITMAP_RED_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER_ROUND_NOB_ID));
    slider.setXY(11, 121);
    slider.setupHorizontalSlider(2, 19, 2, 0, 309);
    slider.setValueRange(32, 85);
    slider.setValue(32);
    slider.setNewValueCallback(sliderValueChangedCallback);
    slider.setStopValueCallback(sliderValueConfirmedCallback);

    txtAreaSetTemp.setXY(11, 12);
    txtAreaSetTemp.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    txtAreaSetTemp.setLinespacing(1);
    txtAreaSetTemp.setTypedText(TypedText(T_SINGLEUSEID1));

    tempText.setPosition(379, 121, 101, 46);
    tempText.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    tempText.setLinespacing(0);
    tempText.setTypedText(TypedText(T_TEXTID2));
    tempTextBuffer[0] = 0;
    tempText.setWildcard(tempTextBuffer);

    textAreaReadTemp.setPosition(314, 12, 154, 102);
    textAreaReadTemp.setColor(touchgfx::Color::getColorFrom24BitRGB(250, 250, 250));
    textAreaReadTemp.setLinespacing(0);
    textAreaReadTemp.setTypedText(TypedText(T_TEXTID1));
    textAreaReadTempBuffer[0] = 0;
    textAreaReadTemp.setWildcard(textAreaReadTempBuffer);

    add(backGround2);
    add(atdi_template480x2721);
    add(buttonOK);
    add(slider);
    add(txtAreaSetTemp);
    add(tempText);
    add(textAreaReadTemp);
}

void SetTempControlViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonOK)
    {
        //OkClicked
        //When buttonOK clicked change screen to Main
        //Go to Main with slide screen transition towards West
        application().gotoMainScreenSlideTransitionWest();
    }
}

void SetTempControlViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider)
    {
        //SliderChanged
        //When slider value changed call virtual function
        //Call sliderMoved
        sliderMoved(value);
    }
}

void SetTempControlViewBase::sliderValueConfirmedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider)
    {
        //intactSetReadTextColor
        //When slider value confirmed call virtual function
        //Call setReadTempColor
        setReadTempColor(value);
    }
}
